version: '3.9'

services:

  musicplatform_db:
    image: postgres:15
    env_file:
      - musicplatform_db.env
    volumes:
      - ./musicplatform_data:/var/lib/postgresql/data/
    networks:
      - musicplatform_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s
    ports:
      - "5432:5432"

  demandservice_db:
    image: postgres:15
    env_file:
      - demandservice_db.env
    volumes:
      - ./demandservice_data:/var/lib/postgresql/data/
    networks:
      - musicplatform_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      timeout: 5s
    ports:
      - "5433:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file:
      - pgadmin.env
    ports:
      - "5050:80"
    networks:
      - musicplatform_network

  minio:
    image: minio/minio:latest
    env_file:
      - minio.env
    volumes:
      - ./minio_data:/data
    networks:
      - musicplatform_network
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    env_file:
      - zookeeper.env
    networks:
      - musicplatform_network
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    env_file:
      - kafka.env
    networks:
      - musicplatform_network
    ports:
      - "9092:9092"
      - "29092:29092"

networks:
  musicplatform_network:
    driver: bridge
